<style>
    .drop-down a {
        cursor: pointer;
    }
</style>

<template>
    <div class="btn-group ${state.isOpen ? 'open' : ''} ${props.class.join(' ')}"
        on-outclick="state.onOutClick()">
        <ui-button class="dropdown-toggle"
            type="${props.type}"
            on-click="${state.onClick}">
            ${state.text}<span class="caret"></span>
        </ui-button>
        <ul class="dropdown-menu">
            <!-- for: ${props.items} as ${item} -->
                <!-- if: ${item.isSeparator} -->
                    <li role="separator" class="divider"></li>
                <!-- elif: ${item.href} -->
                    <li>
                        <a href="${item.href}">${item.label}</a>
                    </li>
                <!-- else -->
                    <li on-click="state.onItemClick(item)"><a>${item.label}</a></li>
                <!-- /if -->
            <!-- /for -->
        </ul>
    </div>
</template>

<script>
import {Component} from 'vcomponent';
import u from 'underscore';
import Button from './Button';

export default class DropDown extends Component {
    ready() {
        this.setState({
            onClick: u.bind(this.onClick, this),
            onOutClick: u.bind(this.onOutClick, this),
            onItemClick: u.bind(this.onItemClick, this),
            text: this.props.get('text')
        });
    }

    setText(text) {
        this.setState({text});
    }

    getComponentClasses() {
        return [Button];
    }

    onItemClick(item) {
        this.setState('isOpen', false);
        let onItemSelected = this.props.get('onItemSelected');
        if (u.isFunction(onItemSelected)) {
            onItemSelected(item);
        }
    }

    onOutClick() {
        this.setState('isOpen', false);
    }

    onClick() {
        let isOpen = this.state.get('isOpen');
        this.setState('isOpen', !isOpen);
    }
}
</script>