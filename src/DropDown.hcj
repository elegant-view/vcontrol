<style>
    .drop-down a {
        cursor: pointer;
    }
</style>

<template>
    <div class="btn-group ${state.isOpen ? 'open' : ''} ${props.class.join(' ')}"
        on-outclick="state.onOutClick()">
        <ui-button class="dropdown-toggle"
            type="${props.type}"
            on-click="${state.onClick}">
            ${state.selected.label}<span class="caret"></span>
        </ui-button>
        <ul class="dropdown-menu">
            <!-- for: props.items as item -->
                <!-- if: item.isSeparator -->
                    <li role="separator" class="divider"></li>
                <!-- elif: item.href -->
                    <li>
                        <a href="${item.href}">${item.label}</a>
                    </li>
                <!-- else -->
                    <li on-click="state.onItemClick(item)"><a>${item.label}</a></li>
                <!-- /if -->
            <!-- /for -->
        </ul>
    </div>
</template>

<script>
import {Component} from 'vcomponent';
import u from 'underscore';
import Button from './Button';

export default class DropDown extends Component {
    ready() {
        this.setState({
            onClick: u.bind(this.onClick, this),
            onOutClick: u.bind(this.onOutClick, this),
            onItemClick: u.bind(this.onItemClick, this)
        });
        this.setSelectedIndex(parseInt(this.props.selectedIndex, 10) || 0);
    }

    propsChange() {
        this.setSelectedIndex(parseInt(this.props.selectedIndex, 10) || 0);
    }

    setSelectedIndex(index) {
        let items = this.props.items || [];
        let selected = u.find(items, (item, i) => {
            return i === index;
        });
        this.setState({selected});
    }

    getComponentClasses() {
        return [Button];
    }

    onItemClick(item) {
        let items = this.props.items;
        u.forEach(items, item => item.isSelected = false);

        item.isSelected = true;
        this.setState({
            isOpen: false,
            items,
            selected: item
        });

        let onItemSelected = this.props.onItemSelected;
        if (u.isFunction(onItemSelected)) {
            onItemSelected(item);
        }
    }

    onOutClick() {
        this.setState('isOpen', false);
    }

    onClick() {
        let isOpen = this.state.isOpen;
        this.setState('isOpen', !isOpen);
    }
}
</script>